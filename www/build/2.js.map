{"version":3,"sources":["../../src/app/pages/login/login.component.module.ts","../../src/app/pages/login/services/login.service.ts","../../src/app/pages/login/login.component.ts","../../src/app/pages/login/login-form/login-form.component.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { LoginPageComponent } from './login.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { LoginService } from './services/login.service';\n\n@NgModule({\n  declarations: [\n    LoginPageComponent,\n    LoginFormComponent,\n  ],\n  entryComponents: [],\n  imports: [\n    IonicPageModule.forChild(LoginPageComponent),\n    TranslateModule,\n  ],\n  providers: [\n      LoginService\n  ]\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/login/login.component.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\n\nimport { HTTP_HEADERS, User } from '../../../models';\n\n@Injectable()\nexport class LoginService {\n\n    constructor(private http: HttpClient) { }\n\n    login(username: string, password: string): Observable<User> {\n        let {url, headers} = this.requestParametersForLogin(username, password);\n        return this.http.get<User>(url, {headers: headers});\n\n    }\n\n    private requestParametersForLogin(username: string, password: string): {url: string, headers: HttpHeaders} {\n        let url = 'login/';\n        const headers: HttpHeaders = new HttpHeaders({\n            [HTTP_HEADERS.AUTHORIZATION]: HTTP_HEADERS.BASIC_PREFIX + ' ' + btoa(username + ':' + password),\n            [HTTP_HEADERS.CONTENT_TYPE]: 'application/x-www-form-urlencoded'\n        });\n        return {url, headers};\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/login/services/login.service.ts","import { Component, OnInit } from '@angular/core';\nimport { IonicPage, App  } from 'ionic-angular';\n\nimport { Authenticate, Role } from '../../models';\nimport { GlobalService, ContextService, PlayersService, MessagesService } from '../../providers';\nimport { LoginService } from './services/login.service';\n\n@IonicPage({\n    name: 'LoginPage',\n    segment: 'login'\n})\n@Component({\n  selector: 'fwf-page-login',\n  templateUrl: 'login.component.html',\n})\nexport class LoginPageComponent implements OnInit {\n\n    constructor(\n      private global: GlobalService,\n      private loginService: LoginService,\n      private app: App,\n      private context: ContextService,\n      private playersService: PlayersService,\n      private messages: MessagesService,\n    ) { }\n\n    ngOnInit() {\n        this.global.enableSideMenu(false);\n    }\n\n    ionViewDidLoad() {}\n\n    onSubmit($event: Authenticate): void {\n        this.loginService.login($event.username, $event.password)\n            .subscribe(\n                user => {\n                    user = {\n                        ...user,\n                        roles: user.roles.map(rol => (<any>Role)[rol]),\n                        active: true\n                    };\n                    this.context.setUserLogged(user);\n                    if (user.playerId) {\n                        this.playersService.getPlayer(user.playerId)\n                            .subscribe(\n                                player => {\n                                    this.context.setPlayerLogged(player);\n                                    this.app.getActiveNav().setRoot('TabsController');\n                                },\n                                error => this.messages.showError('LOGIN.ERROR_LOGIN_MSG', 'LOGIN.ERROR_LOGIN_TITLE')\n                            );\n                    }\n                },\n                err => this.messages.showError('LOGIN.ERROR_LOGIN_MSG', 'LOGIN.ERROR_LOGIN_TITLE')\n            );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/login/login.component.ts","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Authenticate } from '../../../models';\n\n@Component({\n    selector: 'fwf-login-form',\n    templateUrl: 'login-form.component.html'\n})\nexport class LoginFormComponent implements OnInit {\n\n    @Output() submitted = new EventEmitter<Authenticate>();\n\n    loginForm: FormGroup;\n    wasSubmitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n    ) { }\n\n    /**\n     * Enable login button for submission.\n     * @returns {boolean} Indicator if form is ready for submission.\n     */\n    get canLogin(): boolean {\n        return (!this.wasSubmitted && this.loginForm.invalid && !this.loginForm.touched)\n            || (!this.loginForm.invalid && this.loginForm.touched);\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    submit() {\n        if (this.loginForm.valid) {\n            this.submitted.emit(this.loginForm.value);\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/login/login-form/login-form.component.ts"],"sourceRoot":""}